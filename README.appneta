MacOS
=====

References:

* Code Signing:
    * https://developer.apple.com/library/archive/documentation/Security/Conceptual/CodeSigningGuide/Procedures/Procedures.html
    * https://developer.apple.com/library/archive/technotes/tn2206/_index.html

* Notarizing
    * https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow
    * https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution/resolving_common_notarization_issues?language=objc


Prereq:

$ sudo gem install asciidoctor
$ pip3 install dmgbuild

Preferred method:

$ MACOSX_SUPPORT_LIBS=/Users/<identity>/git/pvc-appliance/macos-support-libs tools/macos-setup.sh -t 10.14

# some exports - CODE_SIGN_IDENTITY as per 'security find-identity -p codesigning -v login.keychain'
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/Users/<identity>/Qt5.12.1/5.12.1/clang_64/lib/pkgconfig
export CMAKE_PREFIX_PATH=/Users/<identity>/Qt5.12.1/5.12.1/clang_64/lib/cmake
export CODE_SIGN_IDENTITY="AppNeta Inc"
PATH=/Users/<identity>/Qt5.12.1/5.12.1/clang_64/bin:/Library/Frameworks/Python.framework/Versions/3.7/bin/:$PATH
export PATH

mkdir build; cd build
cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 -G Ninja ..
ninja
ninja dmg_package

Linux
=====

To build Linux debug:

mkdir -p build-debug
cd build-debug
cmake -DCMAKE_BUILD_TYPE=Debug ..
make -j6

Make Linux Package
------------------

Update version in CMakeList.txt and debian/changelog

$ dpkg-buildpackage -us -uc -sa -d
